/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type ExecuteMsgForMetadata = {
  mint: MintMsgForMetadata;
} | {
  update_metadata: {
    amount: Uint128;
    token_id: string;
  };
} | {
  burn: {
    token_id: string;
  };
};
export type Uint128 = string;
export interface MintMsgForMetadata {
  extension: Metadata;
  owner: string;
  token_id: string;
  token_uri?: string | null;
}
export interface Metadata {
  payments: Payment[];
  total: Uint128;
  [k: string]: unknown;
}
export interface Payment {
  amount: Uint128;
  date: number;
}
export interface InstantiateMsg {
  minter: string;
  name: string;
  symbol: string;
}
export type QueryMsgForMetadata = {
  owner_of: {
    include_expired?: boolean | null;
    token_id: string;
  };
} | {
  approval: {
    include_expired?: boolean | null;
    spender: string;
    token_id: string;
  };
} | {
  approvals: {
    include_expired?: boolean | null;
    token_id: string;
  };
} | {
  all_operators: {
    include_expired?: boolean | null;
    limit?: number | null;
    owner: string;
    start_after?: string | null;
  };
} | {
  num_tokens: {};
} | {
  contract_info: {};
} | {
  nft_info: {
    token_id: string;
  };
} | {
  all_nft_info: {
    include_expired?: boolean | null;
    token_id: string;
  };
} | {
  tokens: {
    limit?: number | null;
    owner: string;
    start_after?: string | null;
  };
} | {
  all_tokens: {
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  minter: {};
} | {
  extension: {
    msg: Metadata;
  };
};